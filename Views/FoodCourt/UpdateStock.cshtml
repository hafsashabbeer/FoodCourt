@model FoodCourt.StockTran

@{
    ViewBag.Title = "UpdateStock";
}

@section Scripts{

    <script src="~/Scripts/jquery.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $("#ItemTypeNo").change(function () {
                $("#ItemNo").empty();

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetItemNames")',
                    datatype: 'JSON',
                    data: { id: $("#ItemTypeNo").val() },
                    success: function (ItemNames) {
                        //  debugger;
                        $.each(ItemNames, function (i, Item) {
                            $("#ItemNo").append('<option value="' + Item.Value + '">' + Item.Text + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert("Failed to retrieve Item Names." + ex);
                    }

                });
                return false;
            })
        });

    </script>
}

<h2>UpdateStock</h2>

@using (Html.BeginForm("UpdateStock", "FoodCourt", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>StockTran</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.Label("Stock Id")
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.TransId, new { @readonly = "readonly", htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TransId, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.Label("Type")
            <div class="col-md-10">
                @Html.DropDownList("ItemTypeNo", ViewData["ItemTypes"] as List<SelectListItem>)
                @Html.ValidationMessageFor(model => model.Item.ItemTypeNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <br />
        <div class="form-group">
            @Html.Label("Name")
            <div class="col-md-10">
                @Html.DropDownList("ItemNo", new SelectList(new SelectList(string.Empty, "Value", "Text"), "Select Name"))
                @Html.ValidationMessageFor(model => model.ItemNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <br />
        <div class="form-group">
            @Html.LabelFor(model => model.StockQuantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StockQuantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StockQuantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <br />
        <div class="form-group">
            @Html.LabelFor(model => model.StockAmount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StockAmount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StockAmount, "", new { @class = "text-danger" })
            </div>
        </div>

        <br />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Insert" class="btn btn-default" />
            </div>
        </div>
    </div>
    <h4>@TempData["message"]</h4>
}

<div>
    <input type="button" value="Back" onclick="window.location.href = '@Url.Action("WelcomeAdmin", "FoodCourt")'" />
</div>
